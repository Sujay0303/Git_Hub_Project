AWSTemplateFormatVersion: "2010-09-09"
Description: "Create an S3 Bucket"

Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    DependsOn: S3InvokeLambdaPermission
    Properties:
      BucketName: oneandonlyonebucket13
      # LambdaConfigurations:
      #   - Event: s3:ObjectCreated:*
      #     Function: arn:aws:lambda:us-east-1:672497526349:function:TriggerLambda

  S3BucketEvent:
    Type: AWS::S3::Bucket
    Properties:
      Bucket: !Ref MyS3Bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: arn:aws:lambda:us-east-1:672497526349:function:TriggerLambda
  GlueJobImport:
    Type: AWS::Glue::Job
    DependsOn: MyS3Bucket
    Properties:
      Name: data
      Description: Ingests data from s3 and writes it as a parquet file to the data lake
      ExecutionClass: FLEX
      GlueVersion: 4.0
      MaxRetries: 0
      NumberOfWorkers: 6
      Role: arn:aws:iam::672497526349:role/LabRole
      Timeout: 40
      WorkerType: G.1X
      Command:
        Name: glueetl
        ScriptLocation: s3://github-project-scripts/Small_Script.py

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: firstdatabase1
        LocationUri: s3://oneandonlyonebucket13/

  GlueCrawler:
    Type: AWS::Glue::Crawler
    DependsOn: MyS3Bucket
    Properties:
      Name: gluecrawler1
      DatabaseName: firstdatabase1
      Targets:
        S3Targets:
          - Path: s3://oneandonlyonebucket13/
      Role: arn:aws:iam::672497526349:role/LabRole

  LambdaTrigger:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          def lambda_handler(event, context):
            glue_client = boto3.client('glue')
            response = glue_client.start_crawler(Name="gluecrawler1")
      FunctionName: TriggerLambda
      Handler: index.lambda_handler
      Role: arn:aws:iam::672497526349:role/LabRole
      Runtime: python3.11
      Timeout: 10

  S3InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - LambdaTrigger
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: arn:aws:lambda:us-east-1:672497526349:function:TriggerLambda
      Principal: "s3.amazonaws.com"
      SourceArn: 'arn:aws:s3:::oneandonlyonebucket13'

    # CrawlerJobTrigger:
    #     Type: AWS::Glue::Trigger
    #     Properties:
    #         Name: jobsuccesfultrigger1
    #         Type: CONDITIONAL
    #         StartOnCreation: TRUE
    #         Description: Trigger to start the crawler
    #         Actions:
    #           - CrawlerName :  CrawlingData64
    #         Predicate:
    #           Conditions:
    #             - LogicalOperator: EQUALS
    #               JobName: data-importsep37
    #               State: SUCCEEDED
            

            
    # MyAthenaWorkGroup:
    #     Type: AWS::Athena::WorkGroup
    #     Properties:
    #         Name: MyWorkGroup
    #         Description: workgroup for Athena
    #         State: ENABLED
    #         WorkGroupConfiguration:
    #             BytesScannedCutoffPerQuery: 200000000
    #             EnforceWorkGroupConfiguration: false
    #             PublishCloudWatchMetricsEnabled: true
    #             RequesterPaysEnabled: true
    #             ResultConfiguration:
    #                 OutputLocation: s3://finalbucketgrp4/